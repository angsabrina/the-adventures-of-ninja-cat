namespace SpriteKind {
    export const ForestTunnel = SpriteKind.create()
    export const BeachTunnel = SpriteKind.create()
    export const QuarryTunnel = SpriteKind.create()
    export const NPC = SpriteKind.create()
    export const forestController = SpriteKind.create()
}
scene.onOverlapTile(SpriteKind.Player, myTiles.tile2, function (sprite, location) {
    if (controller.A.isPressed()) {
        if (playerRoom == "forest") {
            game.setDialogTextColor(7)
            game.setDialogFrame(img`
                .....cccccccccccccc.....
                ...cbd111111111111dbc...
                ..cd1111111111111111dc..
                .cd111111111111111111dc.
                .b11111111111111111111b.
                cd11111111111111111111dc
                c1111111111111111111111c
                c1111111111111111111111c
                c1111111111111111111111c
                c1111111111111111111111c
                c1111111111111111111111c
                c1111111111111111111111c
                c1111111111111111111111c
                c1111111111111111111111c
                c1111111111111111111111c
                c1111111111111111111111c
                c1111111111111111111111c
                cd11111111111111111111dc
                .b11111111111111111111b.
                .cd111111111111111111dc.
                ..cd1111111111111111dc..
                ..b11d111111111111dbc...
                .b11bcccccccccccccc.....
                ccccc...................
                `)
            game.showLongText("Greetings. My name is Forest Cat, and I need help! A powerful wizard has left me unable to see the colors of my forest.", DialogLayout.Bottom)
            game.showLongText("I need to find a forest Controller in order to defeat him. Will you help me find it?", DialogLayout.Bottom)
            game.showLongText("Here's a riddle in case you're a spy for the terrible wizard.", DialogLayout.Bottom)
            game.setDialogFrame(img`
                8888.....88....888....888...8888.
                867788..8768..86768..8678.887768.
                8767768.877788676768877788677678.
                87767768676778776778776786776778.
                .877876667767877677876778678778..
                .867786686766867676866766687768..
                ..8666868867688686886768686668...
                .88866688888888888888888866688...
                8777768866666666666666668886688..
                86767768666666666666666688677778.
                .8776678666666666666666686776768.
                ..87766866666666666666668766778..
                ..8888886666666666666666866778...
                .86776886666666666666666888888...
                8677776866666666666666668867768..
                87666688666666666666666686777768.
                86777768666666666666666688666678.
                .8677688666666666666666686777768.
                ..88888866666666666666668867768..
                ..8776686666666666666666888888...
                .87766786666666666666666866778...
                8676776866666666666666668766778..
                87777688666666666666666686776768.
                .8866888666666666666666688677778.
                ..88666888888888888888888666888..
                ..8666868676886868867688686668...
                .867786667668676768667686687768..
                .877876877678776778767766678778..
                87767768767787767787767686776778.
                876776887778867676887778.8677678.
                867788.8768..86768..8678..887768.
                8888...888....888....88.....8888.
                .................................
                `)
            game.showLongText("Find me where ground matches the color of my one true pairing's head.", DialogLayout.Full)
            game.setDialogFrame(img`
                .....cccccccccccccc.....
                ...cbd111111111111dbc...
                ..cd1111111111111111dc..
                .cd111111111111111111dc.
                .b11111111111111111111b.
                cd11111111111111111111dc
                c1111111111111111111111c
                c1111111111111111111111c
                c1111111111111111111111c
                c1111111111111111111111c
                c1111111111111111111111c
                c1111111111111111111111c
                c1111111111111111111111c
                c1111111111111111111111c
                c1111111111111111111111c
                c1111111111111111111111c
                c1111111111111111111111c
                cd11111111111111111111dc
                .b11111111111111111111b.
                .cd111111111111111111dc.
                ..cd1111111111111111dc..
                ..b11d111111111111dbc...
                .b11bcccccccccccccc.....
                ccccc...................
                `)
            game.showLongText("When you find the item, you'll be teleported back to town, head toward the pink light next.", DialogLayout.Bottom)
            spawnLevelCompleter()
        } else if (playerRoom == "beach") {
            game.setDialogTextColor(8)
            game.setDialogFrame(img`
                .....cccccccccccccc.....
                ...cbd111111111111dbc...
                ..cd1111111111111111dc..
                .cd111111111111111111dc.
                .b11111111111111111111b.
                cd11111111111111111111dc
                c1111111111111111111111c
                c1111111111111111111111c
                c1111111111111111111111c
                c1111111111111111111111c
                c1111111111111111111111c
                c1111111111111111111111c
                c1111111111111111111111c
                c1111111111111111111111c
                c1111111111111111111111c
                c1111111111111111111111c
                c1111111111111111111111c
                cd11111111111111111111dc
                .b11111111111111111111b.
                .cd111111111111111111dc.
                ..cd1111111111111111dc..
                ..b11d111111111111dbc...
                .b11bcccccccccccccc.....
                ccccc...................
                `)
            game.showLongText("Howzit, brah? Meeting you today is totally rad! Some gnarly wizard blew by here. Really messed up the vibe of the whole place.", DialogLayout.Bottom)
            game.showLongText("Heard him mumbling something crazy, like some epic spell. How 'bout you help me set the surf right?", DialogLayout.Bottom)
            game.showLongText("Maybe if you step on those sparkly rocks and say it out right loud, everything'll be totally tubular again! Keep on, my dude", DialogLayout.Bottom)
            game.setDialogFrame(img`
                ..ccccc....333.....333.....333...ccccc....
                .c33b33c..39993...39993...39993.c33b33c...
                c3b33bb3c3999993339999933399999c3bb33b3c..
                c33b33b3c9911199999111999991119c3b33b33c..
                cb33b33bc9199919991999199919991cb33b33bc..
                c3b33bbbcb99999111999991119999bcbbb33b3c..
                c3bb3bbd1b11111999111119991111b1dbb3bb3c..
                .c33bbd1b1111111111111111111111b1dbb33c...
                ..cccc1b111111111111111111111111b1cccc....
                .3991bb11111111111111111111111111bb993....
                399199111111111111111111111111111191993...
                3991991111111111111111111111111111991993..
                3991991111111111111111111111111111991993..
                .399191111111111111111111111111111991993..
                ..3991911111111111111111111111111191993...
                ..399191111111111111111111111111191993....
                ..399191111111111111111111111111191993....
                .3991911111111111111111111111111191993....
                399199111111111111111111111111111191993...
                3991991111111111111111111111111111991993..
                3991991111111111111111111111111111991993..
                .399191111111111111111111111111111991993..
                ..3991911111111111111111111111111191993...
                ..399191111111111111111111111111191993....
                ..399191111111111111111111111111191993....
                .3991911111111111111111111111111191993....
                399199111111111111111111111111111191993...
                3991991111111111111111111111111111991993..
                3991991111111111111111111111111111991993..
                .399191111111111111111111111111111991993..
                ..699bb11111111111111111111111111bb1993...
                ..cccc1b111111111111111111111111b1cccc....
                .c33bbd1b1111111111111111111111b1dbb33c...
                c3bb3bbd1b11119991111199911111b1dbb3bb3c..
                c3b33bbbcb99991119999911199999bcbbb33b3c..
                cb33b33bc1999199919991999199919cb33b33bc..
                c33b33b3c9111999991119999911199c3b33b33c..
                c3b33bb3c9999933399999333999993c3bb33b3c..
                .c33b33c.39993...39993...39993..c33b33c...
                ..ccccc...333.....333.....333....ccccc....
                ..........................................
                ..........................................
                `)
            game.showLongText("", DialogLayout.Full)
        } else if (playerRoom == "quarry") {
        	
        }
    }
})
function spawnLevelCompleter () {
    if (playerRoom == "forest") {
        forestController = sprites.create(img`
            . . . . . . . . . . . . . . . . 
            . . . . . . 6 6 6 6 . . . . . . 
            . . . . 6 6 6 5 5 6 6 6 . . . . 
            . . . 7 7 7 7 6 6 6 6 6 6 . . . 
            . . 6 7 7 7 7 8 8 8 1 1 6 6 . . 
            . . 7 7 7 7 7 8 8 8 1 1 5 6 . . 
            . 6 7 7 7 7 8 8 8 8 8 5 5 6 6 . 
            . 6 7 7 7 8 8 8 6 6 6 6 5 6 6 . 
            . 6 6 7 7 8 8 6 6 6 6 6 6 6 6 . 
            . 6 8 7 7 8 8 6 6 6 6 6 6 6 6 . 
            . . 6 8 7 7 8 6 6 6 6 6 8 6 . . 
            . . 6 8 8 7 8 8 6 6 6 8 6 6 . . 
            . . . 6 8 8 8 8 8 8 8 8 6 . . . 
            . . . . 6 6 8 8 8 8 6 6 . . . . 
            . . . . . . 6 6 6 6 . . . . . . 
            . . . . . . . . . . . . . . . . 
            `, SpriteKind.forestController)
        tiles.placeOnRandomTile(forestController, myTiles.tile9)
    } else if (playerRoom == "beach") {
        beachRiddleAnswer = game.askForString("What's the spell?", 6)
        if (beachRiddleAnswer == "clippy") {
            tiles.setTilemap(tiles.createTilemap(hex``, img`
                . . . . . . . . . . 2 2 2 . . . 
                . . . . . . . . . . 2 . 2 . . . 
                . . . . . . . . . . 2 2 2 . . . 
                . . . . . . . . . . . . . . . . 
                . . . . . . . . . . . . . . . . 
                . . . . . . . . . . . . . . . . 
                . . . . . . . . . . . . . . . . 
                . . . . 2 2 2 . . . . . . . . . 
                . . . . 2 . 2 . . . . . . . . . 
                . . . . 2 2 2 . . . . . . . . . 
                . . . . . . . . . . . . . . . . 
                . . . . . . . . . . . . . . . . 
                . . . . . . . . . . . . . . . . 
                . . . . . . . . . . . . . . . . 
                2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
                . . . . . . . . . . . . . . . . 
                `, [myTiles.transparency16,myTiles.tile10,sprites.dungeon.hazardWater,sprites.castle.shrub,myTiles.tile2,myTiles.tile11], TileScale.Sixteen))
            tiles.placeOnRandomTile(quarryCat, myTiles.tile2)
        }
    } else if (playerRoom == "quarry") {
    	
    }
}
function checkPlayerCollision () {
    if (playerRoom == "forest") {
        if (playerSprite.tileKindAt(TileDirection.Center, myTiles.tile5)) {
            showTryAgainSplash()
            teleportPlayer()
        } else if (playerSprite.tileKindAt(TileDirection.Center, myTiles.tile7)) {
            showTryAgainSplash()
            teleportPlayer()
        } else if (playerSprite.tileKindAt(TileDirection.Center, myTiles.tile8)) {
            showTryAgainSplash()
            teleportPlayer()
        }
    } else if (playerRoom == "beach") {
        if (playerSprite.tileKindAt(TileDirection.Center, myTiles.tile6)) {
            spawnLevelCompleter()
        }
    } else if (playerRoom == "quarry") {
    	
    } else if (playerRoom == "town") {
        let mySprite = 0
        if (mySprite) {
        	
        }
    } else {
    	
    }
}
scene.onOverlapTile(SpriteKind.Player, myTiles.tile9, function (sprite, location) {
    forestCat.destroy()
    forestTunnel.destroy()
    showPlace("beach")
    tiles.placeOnRandomTile(playerSprite, myTiles.tile10)
    beachCat = sprites.create(img`
        . . . . . . . . . . . . . . 
        b b b . . . . b b b . . . . 
        c 9 9 c . . c 9 9 c . . . . 
        c a 9 9 f f 9 9 a c . . . . 
        c 3 a 9 a a 9 a 3 c . . . . 
        f a 3 8 8 8 8 3 a f . . . . 
        b 9 9 9 9 9 9 9 9 b . . . . 
        b 9 f 9 9 9 9 f 9 b . a f a 
        f 9 9 9 9 9 9 9 9 f . f 8 f 
        f a 9 9 a a 9 9 c a f f 9 f 
        . f c c c c c c 9 a a 9 a f 
        . f 9 9 9 9 9 9 9 f f f f . 
        . . f 9 a 9 f 9 f . . . . . 
        . . . f f f f f f . . . . . 
        `, SpriteKind.NPC)
    tiles.placeOnRandomTile(beachCat, myTiles.tile2)
})
scene.onOverlapTile(SpriteKind.Player, myTiles.tile11, function (sprite, location) {
    beachCat.destroy()
    showPlace("quarry")
    tiles.placeOnRandomTile(playerSprite, myTiles.tile10)
    quarryCat = sprites.create(img`
        . . . . . . . . . . . . . . 
        b b b . . . . b b b . . . . 
        c d d c . . c d d c . . . . 
        c 4 d d f f d d 4 c . . . . 
        c 3 4 d 4 4 d 4 3 c . . . . 
        f 4 3 b b b b 3 4 f . . . . 
        c e e e e e e e e c . . . . 
        c e f e e e e f e c . 4 f 4 
        f e e e e e e e e f . f d f 
        f 4 e e 4 4 e e c 4 f f e f 
        . f c c c c c c e 4 4 e 4 f 
        . f e e e e e e e f f f f . 
        . . f e 4 e f e f . . . . . 
        . . . f f f f f f . . . . . 
        `, SpriteKind.NPC)
    tiles.placeOnRandomTile(quarryCat, myTiles.tile2)
})
scene.onOverlapTile(SpriteKind.Player, sprites.dungeon.buttonTealDepressed, function (sprite, location) {
    showPlace("forest")
    tiles.placeOnRandomTile(playerSprite, myTiles.tile4)
    forestCat = sprites.create(img`
        . . . . . . . . . . . . . . 
        e e e . . . . e e e . . . . 
        c 7 7 c . . c 7 7 c . . . . 
        c b 7 7 f f 7 7 b c . . . . 
        c 3 b 7 7 b 7 b 3 c . . . . 
        f b 3 6 6 6 6 3 b f . . . . 
        e 7 7 7 7 7 7 7 7 e . . . . 
        e 7 f 7 7 7 7 f 7 e . b f b 
        f 7 7 7 7 7 7 7 7 f . f 6 f 
        f b 7 7 b b 7 7 c b f f 7 f 
        . f c c c c c c 7 b b 7 b f 
        . f 7 7 7 7 7 7 7 f f f f . 
        . . f 7 b 7 f 7 f . . . . . 
        . . . f f f f f f . . . . . 
        `, SpriteKind.NPC)
    tiles.placeOnRandomTile(forestCat, myTiles.tile2)
})
function teleportPlayer () {
    if (playerRoom == "forest") {
        tiles.placeOnRandomTile(playerSprite, myTiles.tile4)
    } else if (playerRoom == "beach") {
    	
    } else if (playerRoom == "quarry") {
    	
    }
}
function showTryAgainSplash () {
    scene.cameraShake(4, 500)
    game.splash("Oops, that wasn't the right thing to do. Try again!")
}
function showPlace (place: string) {
    playerRoom = place
    if (place == "town") {
        tiles.setTilemap(tiles.createTilemap(hex`3000300001010101010101010101010101010101010101010101100b0b0101010101010101010103030303030303030303030301010101020101010101010101010101010101010101010107081001030303010101010103121212121212121212121203030102011212121212121212120103030301010101010107080101030103010101010103121212121212121212121203010101011201010101010101120103010301010101100107080101030303010101010103121212121212121212121203010301011201010101010101120103030301010101010107080110010101010101010103121212121212121212121203010101011212121212121212120101010101010101011007080101010101010101010103121212121212121212121203030101010101010101010101010101010101010101010107080101010101010101010103030312120303030303030303010101010101010e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e07080e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e01010101010101010301010101010e060404040404040404040404040404040404040404040404040404040404040d0e02020202020202010101010101010e0a050505050505050505050505050505050505050505050505050505050505090e02020202030303030101010101010e07080101010101010101010101010102020202020202020202020202020207080e02020202030203010101010101010e07080101010101010101010101010102020202121212121212121212020207080e02020202030303010301030303010e07080101030303030303030303010102020202120202020202020212020207080e02020202020202010101030103010e07080101030101010101010103010102020202120202020202020212020207080e03030302020202010101030303010e07080101030303030303030303010102020202121212121212121212020207080e03020302020101010101010101010e07080101010101010101010101010102020202020202010101010202020207080e03030302020101010202020202020e07080101010101010101010101010102030303030302010101010202020207080e02020202020101020202020202020e07080112121212121212121212120102030202020302010101010202020207080e02020202020101030202020202020e07080112010101010101010101120102030202020302020202020203030307080e02020202020202021212121212020e07080112010101010101010101120102030202020302020202020203020307080e02020202020202031202020212020e07080112121212121212121212120102030303030302020202020203030307080e02020202110202021202020212020e07080101010101010101010101010102020202020202020202020202020207080e11020202020211031202020212020e07080404040404040404040404040d0101060404040404040404040404040708040404040404040c021202020212020e07080505050505050505050505050901010a0505050505050505050505050708050505050505050c031202020212020e07080202020202020202020202020201010101010101010101010101010107080e02021102020202021202020212020e07080202030303030303030303030201010101010101010101010101010107080e02020202021102031202020212020e07080202030202020202020202030201010101121212121212121212010107080e03030303030202021202020212020e07080202030202020202020202030201010101120101010101010112010107080e03020202030202031212121212020007080202030303030303030303030201010101120101010101010112010107080e03020202030202020202020202020007080202020202020202020202020201010101121212121212121212010107080e03020202030202020202020202020e07080202020201010101020202020201010101010101010101010101010107080e03030303030202010201010103010e07080202020201010101020202020303010101010101010101010101010107080e02020202020201010201010101010e07080202020201010101020202020303010101010101010101010101010107080e02020202020201020201010303030e07080212121212121212121212020303010103030303030101010101010107080e02020202020202020101010301030e07080212120202020202020212020303010103010101030101010101010107080e02020202020202030301010303030e07080212120202020202020212020303010103010101030101010103030307080e02021212121202020301011201010e07080212121212121212121212020303010103010101030101010103010307080e02021202021202030301011201010e07080202020202020202020202020201010103030303030101010103030307080e02021202021202030303011201010e060404040404040404040404040404040404040404040404040404040404040d0e02021202021202020103011201010e0a050505050505050505050505050505050505050505050505050505050505090e02021202021202020103011201010e0e0e0e0e0e0e0e0e0e0e0e0e0e0e0e07080e0e0e0e0e0e0e0e0e0e0e0e0e02020e02021202021202020103011201010112010101010101010101010101010107080202020202020202020202020202020202021202021202030303011201010112011212121212121212121201010107080f02021212121212121212121203030302021202021202020201011201010112011201010101010101011201010f0708020202120202020202020202120302030202120202120202020101120101011201120101010101010101120101010708020f0212020202020202020212030303020212121212020202010112121212120112121212121212121212010101070802020212121212121212121212020202030303030302020202010103030301010103030301020202020101010f0107080f02020303030202020202020202020203020202030202010201010301030101010301030102010102010101010113130202020302030101020202020202020203020202030201`, img`
            ......................2..2......................
            ......................2..2......................
            ......................2..2......................
            ......................2..2......................
            ......................2..2......................
            ......................2..2......................
            ......................2..2......................
            .......2222222222222222..2222222222222..2.......
            .......2................................2.......
            .......2................................2.......
            .......2..2222222222222222222222222222..2.......
            .......2..2..........................2..2.......
            .......2..2..........................2..2.......
            .......2..2..........................2..2.......
            .......2..2..........................2..2.......
            .......2..2..........................2..2.......
            .......2..2..........................2..2.......
            .......2..2..........................2..2.......
            .......2..2..........................2..2.......
            .......2..2..........................2..2.......
            .......2..2..........................2..2.......
            .......2..2222222222222222222222222222..22222222
            .......2...............22.......................
            .......2...............22.......................
            .......2..2222222222222222222222222222..22222222
            .......2..2..........................2..2.......
            .......2..2..........................2..2.......
            .......2..2..........................2..2.......
            ..........2..........................2..2.......
            ..........2..........................2..2.......
            .......2..2..........................2..2.......
            .......2..2..........................2..2.......
            .......2..2..........................2..2.......
            .......2..2..........................2..2.......
            .......2..2..........................2..2.......
            .......2..2..........................2..2.......
            .......2..2..........................2..2.......
            .......2..2222222222222222222222222222..2.......
            .......2................................2.......
            .......2................................2.......
            .......2.22222222222222..2222222222222..2.......
            ................................................
            ................................................
            ................................................
            ................................................
            ................................................
            ................................................
            ................................................
            `, [myTiles.transparency16,sprites.castle.tileGrass1,sprites.castle.tileGrass3,sprites.castle.tileGrass2,sprites.vehicle.roadIntersection3,sprites.vehicle.roadIntersection1,sprites.vehicle.roadTurn1,sprites.vehicle.roadIntersection2,sprites.vehicle.roadIntersection4,sprites.vehicle.roadTurn4,sprites.vehicle.roadTurn3,sprites.dungeon.buttonTealDepressed,sprites.dungeon.buttonPink,sprites.vehicle.roadTurn2,sprites.castle.shrub,sprites.castle.rock2,sprites.castle.saplingOak,sprites.builtin.coral1,sprites.castle.tilePath5,sprites.dungeon.buttonOrangeDepressed], TileScale.Sixteen))
    } else if (place == "forest") {
        tiles.setTilemap(tiles.createTilemap(hex``, img`
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            `, [myTiles.transparency16], TileScale.Sixteen))
        game.showLongText("Welcome to the magical forest", DialogLayout.Center)
        effects.starField.startScreenEffect()
        tiles.setTilemap(tiles.createTilemap(hex`200020000202020202020202020202020202020a0a020202020202020202020202020202020202020202020202020202020202030302020202020202020202020202020202020505050505050505050505020203030202060606060606060606060602020202050505050505050505050502020303020206040606060606060606060202020205040505050505050504050202030302020604060606060606060b06020202020504050505050505050405020203030202060406060606060606060602020202050405050505050505040502020303020206040606060606060606060202020205040505050505050504050202030302020604060606060606060606020202020504040404040404040405020203030202060406060606060606060602020202050405050505050505040502020303020206040606060606060606060202020205040505050505050504050202030302020604060606060606060606020202020504050505050505050405020203030202060404040404040404040602020202050505050505050505050502020303020206060606060606060606060202020202020202020202020202050202030302020602020202020202020202020202020202020202020202020203020203030202030202020202020202020202020a0303030303030303030303030303010103030303030303030303030303030a0a0303030303030303030303030303010103030303030303030303030303030a`, img`
            ..............22222.............
            ..............2..22222222222222.
            ..............2..22...........2.
            ..............2..22.2.........2.
            ...2..........2..22.2.........2.
            ...2..........2..22.2.........2.
            ...2..........2..22.2.........2.
            ...2..........2..22.2.........2.
            ...222222222..2..22.2.........2.
            ...2..........2..22.2.........2.
            ...2..........2..22.2.........2.
            ...2..........2..22.222222222.2.
            ..............2..22...........2.
            ..............2..22.22222222222.
            222222222222.22..22.222222222222
            2..............................2
            2..............................2
            222222222222.22..22.222222222222
            ..............2..2..............
            ..............2..2..............
            ..............2..2..............
            ..............2..2..............
            ..............2..2..............
            ..............2..2..............
            ..............2..2..............
            ..............2..2..............
            ..............2..2..............
            ..............2..2..............
            ..............2..2..............
            ..............2..2..............
            ..............2..2..............
            ..............2..2..............
            `, [myTiles.transparency16,myTiles.tile2,sprites.castle.tileDarkGrass1,myTiles.tile4,sprites.castle.saplingPine,myTiles.tile5,myTiles.tile6,myTiles.tile7,myTiles.tile8,myTiles.tile3,sprites.builtin.forestTiles0,myTiles.tile9], TileScale.Sixteen))
    } else if (place == "beach") {
        tiles.setTilemap(tiles.createTilemap(hex``, img`
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            `, [myTiles.transparency16], TileScale.Sixteen))
        game.showLongText("Welcome to the bubbly beach", DialogLayout.Center)
        effects.bubbles.startScreenEffect(2000)
        tiles.setTilemap(tiles.createTilemap(hex``, img`
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
            . . . . . . . . . . . . . . . . 
            `, [myTiles.transparency16,myTiles.tile10,sprites.dungeon.hazardWater,sprites.castle.shrub,myTiles.tile2,myTiles.tile6], TileScale.Sixteen))
    } else if (place == "quarry") {
        effects.blizzard.startScreenEffect()
        tiles.setTilemap(tiles.createTilemap(hex``, img`
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            . . . . . . . . . . . . . . . . 
            `, [myTiles.transparency16], TileScale.Sixteen))
    }
}
let beachCat: Sprite = null
let forestCat: Sprite = null
let quarryCat: Sprite = null
let beachRiddleAnswer = ""
let forestController: Sprite = null
let playerRoom = ""
let forestTunnel: Sprite = null
let playerSprite: Sprite = null
game.splash("Hi")
showPlace("town")
playerSprite = sprites.create(img`
    . . . . . . . . . . . . . . 
    e e e . . . . e e e . . . . 
    c d d c . . c d d c . . 2 2 
    c b d d f f d d b c 2 2 . . 
    c 3 b d d b d b 3 c 2 . . . 
    f b 3 2 2 2 2 3 b f 2 2 . . 
    e d d d d d d d d e . 2 2 2 
    e d f d d d d f d e . b f b 
    f d d d d d d d d f . f d f 
    f b d d b b d d c b f f d f 
    . f c c c c c c d b b d b f 
    . f d d d d d d d f f f f . 
    . . f d b d f d f . . . . . 
    . . . f f f f f f . . . . . 
    `, SpriteKind.Player)
forestTunnel = sprites.create(sprites.dungeon.buttonTealDepressed, SpriteKind.ForestTunnel)
tiles.placeOnRandomTile(playerSprite, sprites.vehicle.roadIntersection3)
playerRoom = ""
forever(function () {
    controller.moveSprite(playerSprite)
    scene.cameraFollowSprite(playerSprite)
    checkPlayerCollision()
})
